<!DOCTYPE html>
<html lang="ar" dir="rtl">

    <%- include("./partials/head.ejs") %>


<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">


<body>

    <style>

 #reader {
            width: 300px;
            height: 300px;
            margin: auto;
            border-radius: 10px;
                        border: 2px solid #ffffff;
            display: none;

        }
        #qr-code {
            margin-top: 20px;
        }

        .chapter_Box form input {
            border-radius: 10px;
            background-color: transparent;
            border: 2px solid #ffffff;
            color: #ffffff !important;
            text-align: center;
            font-size: larger;
            font-weight: 900;
            transition: all 0.3s;
        }

        .chapter_Box form input:focus {
            border: 2px solid #affff3;
            background-color: transparent;
            color: #ffffff !important;
        }


        .chapter_Box form button {
            margin-top: 1rem;
            border-radius: 10px;
        }
        
        .spinner {
        
   width: 56px;
   height: 56px;
   border-radius: 50%;
   background: conic-gradient(#0000 10%,#474bff);
   -webkit-mask: radial-gradient(farthest-side,#0000 calc(100% - 9px),#000 0);
   animation: spinner-zp9dbg 1s infinite linear;
}

#errorMessage {
    display: none;
    color: red;
    text-align: center;
    margin-top: 1rem;
}
@keyframes spinner-zp9dbg {
   to {
      transform: rotate(1turn);
   }
}

@media (max-width: 768px) {
    #myTable{
        font-size: 10px
    }
    
}
        
    </style>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-2" >
                <%- include("./partials/nav.ejs") %>
            </div>
            <!--------------------END ASIDE  ------------------>
   <!-- Modal -->



<!--  END Modal -->
            <div class="col-lg-10 ">
                <main>
                    <div class="row">
                     
                        <div class=" col-md-4 ">
                            <div class="left" style="margin-top: 0.2rem;">
                                <%- include("./partials/top.ejs") %> 

                            </div>
                        </div>

                       
                    </div>


        
 
                    <div class="row">
                        <div class="col-md-12  col-sm-12">
                                <div class="col-md-10">   
                               

                                   <select name="Grade" class="Grade" id="CardGrade" required>
                                       <option value="" >اختر الصف الدراسي</option>
                                       <option  value="Grade1">الصف الاول الثانوي</option>
                                       <option value="Grade2">الصف الثاني الثانوي </option>
                                       <option value="Grade3">الصف الثالث الثانوي</option>

                                   </select>
                                    <select name="centerName" class="Grade" id="centerName" required>
                                       <option value="" selected>اختر اسم السنتر </option>
                                       <option value="centerBasmala">  البسمله</option>
                                       <option value="centerDHL">DHL </option>
                                       <option value="centerDarElsa3da">   دار السعاده</option>
                                       <option value="centerFutureSoft">  Future Soft</option>
                                       <option value="centerInfinity"> Infinity</option>
                                       <option value="centerElra3y"> الراعي</option>
                                       <option value="centerNewFuture"> New Future</option>
                                       <option value="centerHarverd"> هارفرد </option>
                                       <option value="centerA1"> A1 </option>

                                   </select>
                                 <select name="groupTime" class="Grade" id="GroupTime" required>
                                <option value="" selected>مجموعه</option>
                               </select>


                                   <select name="Dates" class="Grade" id="Dates">

                                   </select>
                                 
                                   <button type="submit" id="getAttendeesDataBtn" class="btn btn-secondary btn-md me-3 mt-4" disabled> Get Data</button>
                                   
                               </div>
                                <div >
                                    <div id="reader"></div>     
                                </div>
                                                         
                            <div class="student-table">
            
                                <h2 class=" " style="text-align: center;" id="errorMessage" >الرجاء إدخال رقم الكارت بشكل صحيح</h2>

                                  
                               
                             
                                <table id="myTable">
                                    <thead>
                                        <th style="padding: 10px;"># </th>
                                        <th style="padding-left: 20px;">اسم الطالب</th>
                                        <th style="padding-left: 20px;">كود الطالب</th>
                                        <th style="padding-left: 20px;">رقم هاتف الطالب</th>
                                        <th style="padding-left: 20px;">رقم هاتف ولي امر الطالب</th>
                                        <th style="padding-left: 20px;"></th>
                             
                                    </thead>

                                    <tbody >
                           
                                    </tbody>
                                </table>

                            </div>
                   

                      
                        </div>
                    </div>

                    <div class="pagination justify-content-between mb-5">
                           
                        <div class="mx-auto">
                            <button class="paginationBtns" id="ConvertAttadnaceToExcel">Save And Convert To Excel</button> 
                        </div>
                      
                    </div>

                
                </main>
            </div>

            <!-------------------- END OF MAIN --------------------->
         
        </div>
    </div>

    <script src="/assest/bootstrap.bundle.min.js"></script>
    <script src="/assest/bootstrap.min.js"></script>

<script>
// Group times for each center
const groupTimes = {
    centerBasmala: [
        { value: 'group1', text: 'السبت - 10  - 12 ' },
        { value: 'group2', text: 'السبت - 12  - 2 ' }
    ],
    centerDHL: [
        { value: 'group1', text: 'السبت - 3  - 5 ' },
        { value: 'group2', text: 'السبت - 5  - 7 ' }
    ],
    centerDarElsa3da: [
        { value: 'group1', text: 'الاحد - 3:30  - 5:30 ' },
        { value: 'group2', text: 'الاثنين - 5  - 7 ' }
    ],
    centerFutureSoft: [
        { value: 'group1', text: 'الاحد - 6  - 8 ' },
        { value: 'group2', text: 'الخميس - 7  - 9 ' }
    ],
    centerInfinity: [
        { value: 'group1', text: 'الاثنين - 7  - 9 ' }
    ],
    centerElra3y: [
        { value: 'group1', text: 'الثلاثاء - 3  - 5 ' },
        { value: 'group2', text: 'الاربعاء - 5:30  - 7:30 ' },
        { value: 'group3', text: 'الاربعاء - 7:30  - 9:30 ' }
    ],
    centerNewFuture: [
        { value: 'group1', text: 'الثلاثاء - 5  - 7 ' },
        { value: 'group2', text: 'الثلاثاء - 7  - 9 ' }
    ],
    centerHarverd: [
        { value: 'group1', text: 'الخميس - 3  - 5 ' },
        { value: 'group2', text: 'الخميس - 5  - 7 ' }
    ],
    centerA1: [
        { value: 'group1', text: 'الجمعه - 3  - 5 ' },
        { value: 'group2', text: '7 - 5  - 5 ' }
    ]
};

// Handle center name change
document.getElementById('centerName').addEventListener('change', function() {
    const selectedCenter = this.value;
    const groupTime = document.getElementById('GroupTime');

    // Clear existing options
    groupTime.innerHTML = '<option value="" selected>مجموعه</option>';

    // Add new options based on the selected center
    if (groupTimes[selectedCenter]) {
        groupTimes[selectedCenter].forEach(group => {
            const option = document.createElement('option');
            option.value = group.value;
            option.textContent = group.text;
            groupTime.appendChild(option);
        });
    }
});
</script>

    <script>
        const getAttendeesDataBtn = document.getElementById('getAttendeesDataBtn');
        const CardGrade = document.getElementById('CardGrade');
        const centerName = document.getElementById('centerName');
        const GroupTime = document.getElementById('GroupTime');
        const errorMessage = document.getElementById('errorMessage');
        const Dates = document.getElementById('Dates');
        const getAttendeesForm = document.getElementById('getAttendees');
            
        const ConvertAttadnaceToExcel = document.getElementById('ConvertAttadnaceToExcel') 

        GroupTime.addEventListener('change', async () => {
            // Disable the inputs

            if (CardGrade.value === '' || centerName.value === '' || GroupTime.value === '') {
                return;
                
            }

            // Create the data object to be sent to the backend
            const data = {
                CardGrade: CardGrade.value,
                centerName: centerName.value,
                GroupTime: GroupTime.value,
            };

            try {
                const response = await fetch('/teacher/handelAttendance/getDates', {
                    method: 'POST', 
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const responseData = await response.json();

                if (response.ok) {
                    console.log('Dates:', responseData);
                    // Populate the table with student data
                    const Dates = document.getElementById('Dates');
                    Dates.innerHTML = '';
                    const option = document.createElement('option');
                    option.value = '';
                    option.textContent = 'اختر التاريخ';
                    Dates.appendChild(option);
                
                    responseData['Dates'].forEach((date, index) => {
                        const option = document.createElement('option');
                        option.value = date;
                        option.textContent = date;
                        Dates.appendChild(option);
                    });
                    getAttendeesDataBtn.disabled = false;
                } else {
                    console.error('Failed to fetch attended users:', responseData.message);
                }
            } catch (error) {
                console.error('An error occurred:', error);
            }
        });
        

        getAttendeesDataBtn.addEventListener('click', async (e) => {
            CardGrade.setAttribute('disabled', 'disabled');
            centerName.setAttribute('disabled', 'disabled');
            GroupTime.setAttribute('disabled', 'disabled');
            Dates.setAttribute('disabled', 'disabled');

            if (CardGrade.value === '' || centerName.value === '' || GroupTime.value === '' || Dates.value === '') {
                return;
            }
            console.log(Dates.value , CardGrade.value , centerName.value , GroupTime.value);
            const data = {
                CardGrade: CardGrade.value,
                centerName: centerName.value,
                GroupTime: GroupTime.value,
                date : Dates.value,            
            };

            try {
                    const response = await fetch('/teacher/handelAttendance/getAttendees', {
                    method: 'POST', 
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });


                const responseData = await response.json();
                console.log(responseData);
                if (response.ok) {
                    // Populate the table with student data
                    const table = document.querySelector('tbody');
                    table.innerHTML = '';
                    responseData['students'].forEach((student, index) => {
                        const row = document.createElement('tr');
                        row.setAttribute('data-student-id', student._id); // Set the student ID on the row
                        row.innerHTML = `
                            <td>${index + 1}</td>
                            <td style="padding-left: 20px;">${student.Username}</td>
                            <td style="padding-left: 20px;" >${student.Code}</td>
                            <td style="padding-left: 20px;" >${student.phone}</td>
                            <td style="padding-left: 20px;" >${student.parentPhone}</td>
                        
                        `;
                        table.appendChild(row);
                    });

                    // Add event listeners for delete buttons
                    const deleteButtons = document.querySelectorAll('.delete-btn');
                    deleteButtons.forEach(button => {
                        button.addEventListener('click', async (e) => {
                            const studentId = e.target.getAttribute('data-id');
                            const rowToDelete = e.target.closest('tr'); // Get the row element to remove later
                            await deleteAttendance(studentId, rowToDelete); // Pass the row for removal
                        });
                    });
                
                } else {
                    errorMessage.style.display = 'block';
                    errorMessage.textContent = responseData.message || 'An error occurred. Please try again.';
             
                    setTimeout(() => {
                        errorMessage.style.display = 'none';
                    }, 3000);
                }
            } catch (error) {
                console.error('An error occurred:', error);
            }
        });



    
        ConvertAttadnaceToExcel.addEventListener('click', async () => {
                const data = {
                    CardGrade: CardGrade.value,
                    centerName: centerName.value,
                    GroupTime: GroupTime.value,
                    date : Dates.value,
                };

                try {
                    const response = await fetch('/teacher/handelAttendance/convertAttendeesToExcel', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        // Convert the response to a blob
                        const blob = await response.blob();

                        // Create a URL for the blob and initiate a download
                        const url = window.URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = 'attendance_data.xlsx';
                        document.body.appendChild(a);
                        a.click();

                        // Clean up by revoking the object URL and removing the link
                        window.URL.revokeObjectURL(url);
                        a.remove();

                        console.log('Excel file downloaded successfully.');
                    } else {
                        const responseData = await response.json();
                        console.error('Failed to convert attendance to Excel:', responseData.message);
                    }
                } catch (error) {
                    console.error('An error occurred:', error);
                }
            });




    </script>


</body>


</html>